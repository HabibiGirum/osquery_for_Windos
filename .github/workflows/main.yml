name: Build osquery on Windows

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Install Prerequisites
      run: |
        # Install Git, CMake, Python, and other prerequisites
        # Adjust paths and versions as needed
        choco install git cmake python3 --params '"/AddToPath"'
        choco install visualstudio2019-workload-vctools
        choco install python
        choco install wixtoolset
        choco install strawberryperl
        choco install 7zip
      shell: powershell
    
    - name: Enable Long Paths
      run: |
        # Enable long paths in Windows registry
        # You can skip this step if not needed
        REG ADD HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f
      shell: powershell
      continue-on-error: true
    
    - name: Install Python Test Prerequisites
      run: |
        # Install Python test prerequisites
        & 'C:\Program Files\Python37\python.exe' -m pip install setuptools psutil timeout_decorator thrift==0.11.0 osquery pywin32
      shell: powershell
      continue-on-error: true
    
    - name: Configure and Build osquery
      run: |
        git clone https://github.com/osquery/osquery
        cd osquery
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -A x64 ..
        cmake --build . --config RelWithDebInfo -j10
    
    - name: package
      run: |
        # Generate package data and set DESTDIR
        mkdir package_data
        $Env:DESTDIR = (Get-Location).Path + "\package_data"
        cmake --build . --target install --config Release
      shell: powershell
    
    - name: Upload package_data
      uses: actions/upload-artifact@v2
      with:
        name: osquery-package-data

